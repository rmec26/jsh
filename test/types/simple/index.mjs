//@ts-check

import { describe } from "node:test";
import { testAllCases } from "../utils.mjs";

describe("Simple Type Checking", () => {
  describe("'any' type", () => {
    testAllCases("any",
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
    );
  });

  describe("'string' type", () => {
    testAllCases("string",
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      "number value is not of string type",
      "number value is not of string type",
      "number value is not of string type",
      "number value is not of string type",
      "number value is not of string type",
      "boolean value is not of string type",
      "boolean value is not of string type",
      "null value is not of string type",
      "object value is not of string type",
      "object value is not of string type",
      "object value is not of string type",
      "object value is not of string type",
      "array value is not of string type",
      "array value is not of string type",
      "array value is not of string type",
      "array value is not of string type",
    );
  });

  describe("'number' type", () => {
    testAllCases("number",
      "string value is not of number type",
      "string value is not of number type",
      "string value is not of number type",
      "string value is not of number type",
      "string value is not of number type",
      "string value is not of number type",
      "string value is not of number type",
      "string value is not of number type",
      "string value is not of number type",
      null,
      null,
      null,
      null,
      null,
      "boolean value is not of number type",
      "boolean value is not of number type",
      "null value is not of number type",
      "object value is not of number type",
      "object value is not of number type",
      "object value is not of number type",
      "object value is not of number type",
      "array value is not of number type",
      "array value is not of number type",
      "array value is not of number type",
      "array value is not of number type",
    );
  });

  describe("'boolean' type", () => {
    testAllCases("boolean",
      "string value is not of boolean type",
      "string value is not of boolean type",
      "string value is not of boolean type",
      "string value is not of boolean type",
      "string value is not of boolean type",
      "string value is not of boolean type",
      "string value is not of boolean type",
      "string value is not of boolean type",
      "string value is not of boolean type",
      "number value is not of boolean type",
      "number value is not of boolean type",
      "number value is not of boolean type",
      "number value is not of boolean type",
      "number value is not of boolean type",
      null,
      null,
      "null value is not of boolean type",
      "object value is not of boolean type",
      "object value is not of boolean type",
      "object value is not of boolean type",
      "object value is not of boolean type",
      "array value is not of boolean type",
      "array value is not of boolean type",
      "array value is not of boolean type",
      "array value is not of boolean type",
    );
  });

  describe("'null' type", () => {
    testAllCases("null",
      "string value is not of null type",
      "string value is not of null type",
      "string value is not of null type",
      "string value is not of null type",
      "string value is not of null type",
      "string value is not of null type",
      "string value is not of null type",
      "string value is not of null type",
      "string value is not of null type",
      "number value is not of null type",
      "number value is not of null type",
      "number value is not of null type",
      "number value is not of null type",
      "number value is not of null type",
      "boolean value is not of null type",
      "boolean value is not of null type",
      null,
      "object value is not of null type",
      "object value is not of null type",
      "object value is not of null type",
      "object value is not of null type",
      "array value is not of null type",
      "array value is not of null type",
      "array value is not of null type",
      "array value is not of null type",
    );
  });

  describe("'object' type", () => {
    testAllCases("object",
      "string value is not of object type",
      "string value is not of object type",
      "string value is not of object type",
      "string value is not of object type",
      "string value is not of object type",
      "string value is not of object type",
      "string value is not of object type",
      "string value is not of object type",
      "string value is not of object type",
      "number value is not of object type",
      "number value is not of object type",
      "number value is not of object type",
      "number value is not of object type",
      "number value is not of object type",
      "boolean value is not of object type",
      "boolean value is not of object type",
      "null value is not of object type",
      null,
      null,
      null,
      null,
      "array value is not of object type",
      "array value is not of object type",
      "array value is not of object type",
      "array value is not of object type",
    );
  });

  describe("'array' type", () => {
    testAllCases("array",
      "string value is not of array type",
      "string value is not of array type",
      "string value is not of array type",
      "string value is not of array type",
      "string value is not of array type",
      "string value is not of array type",
      "string value is not of array type",
      "string value is not of array type",
      "string value is not of array type",
      "number value is not of array type",
      "number value is not of array type",
      "number value is not of array type",
      "number value is not of array type",
      "number value is not of array type",
      "boolean value is not of array type",
      "boolean value is not of array type",
      "null value is not of array type",
      "object value is not of array type",
      "object value is not of array type",
      "object value is not of array type",
      "object value is not of array type",
      null,
      null,
      null,
      null,
    );
  });

  describe("'integer' type", () => {
    testAllCases("integer",
      "string is not a number",
      "string is not a number",
      "string is not a number",
      "string is not a number",
      "string is not a number",
      "string is not a number",
      "string is not a number",
      "string is not a number",
      "string is not a number",
      null,
      "Is a number but not an integer",
      null,
      null,
      "Is a number but not an integer",
      "boolean is not a number",
      "boolean is not a number",
      "null is not a number",
      "object is not a number",
      "object is not a number",
      "object is not a number",
      "object is not a number",
      "array is not a number",
      "array is not a number",
      "array is not a number",
      "array is not a number",
    );
  });

  describe("'path' type", () => {
    testAllCases("path",
      [["a string"]],
      [["a", "valid", "path"]],
      [["another", "valid.path"]],
      [["123"]],
      [["true"]],
      [["null"]],
      [["{}"]],
      [["[]"]],
      [[""]],
      "Path is not of the type string or array.",
      "Path is not of the type string or array.",
      "Path is not of the type string or array.",
      "Path is not of the type string or array.",
      "Path is not of the type string or array.",
      "Path is not of the type string or array.",
      "Path is not of the type string or array.",
      "Path is not of the type string or array.",
      "Path is not of the type string or array.",
      "Path is not of the type string or array.",
      "Path is not of the type string or array.",
      "Path is not of the type string or array.",
      "Path cannot be an empty array.",
      [["123", "678"]],
      [["str1", "str2"]],
      [["123", "678", "str1", "str2"]],
    );
  });

  describe("'invalid' type", () => {
    testAllCases("invalid",
      "'invalid' is not a valid simple type",
      "'invalid' is not a valid simple type",
      "'invalid' is not a valid simple type",
      "'invalid' is not a valid simple type",
      "'invalid' is not a valid simple type",
      "'invalid' is not a valid simple type",
      "'invalid' is not a valid simple type",
      "'invalid' is not a valid simple type",
      "'invalid' is not a valid simple type",
      "'invalid' is not a valid simple type",
      "'invalid' is not a valid simple type",
      "'invalid' is not a valid simple type",
      "'invalid' is not a valid simple type",
      "'invalid' is not a valid simple type",
      "'invalid' is not a valid simple type",
      "'invalid' is not a valid simple type",
      "'invalid' is not a valid simple type",
      "'invalid' is not a valid simple type",
      "'invalid' is not a valid simple type",
      "'invalid' is not a valid simple type",
      "'invalid' is not a valid simple type",
      "'invalid' is not a valid simple type",
      "'invalid' is not a valid simple type",
      "'invalid' is not a valid simple type",
      "'invalid' is not a valid simple type",
    );
  });

  describe("invalid number type", () => {
    testAllCases(123,
      "Type must be in a string or array format",
      "Type must be in a string or array format",
      "Type must be in a string or array format",
      "Type must be in a string or array format",
      "Type must be in a string or array format",
      "Type must be in a string or array format",
      "Type must be in a string or array format",
      "Type must be in a string or array format",
      "Type must be in a string or array format",
      "Type must be in a string or array format",
      "Type must be in a string or array format",
      "Type must be in a string or array format",
      "Type must be in a string or array format",
      "Type must be in a string or array format",
      "Type must be in a string or array format",
      "Type must be in a string or array format",
      "Type must be in a string or array format",
      "Type must be in a string or array format",
      "Type must be in a string or array format",
      "Type must be in a string or array format",
      "Type must be in a string or array format",
      "Type must be in a string or array format",
      "Type must be in a string or array format",
      "Type must be in a string or array format",
      "Type must be in a string or array format",
    );
  });
});